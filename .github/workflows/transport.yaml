name: MESSAGEix-Transport

env:
  # The repository, ref (branch), and workflow file name to dispatch
  target-repo: iiasa/message_data
  target-ref: dev
  target-workflow: transport

  # Starting point of the workflow.
  #
  # Use this value to build from a certain scenario:
  # base: --url="ixmp://ixmp-dev/MESSAGEix-GLOBIOM 1.1-R12/baseline_DEFAULT#21"
  #
  # Use this value to allow the workflow to determine model & scenario names
  # and versions:
  base: --platform=ixmp-dev

  # Set this to a particular step to truncate the workflow.
  from-step: ""

  # Workflow steps/labels to run. These correspond to the 'TARGET' argument to
  # 'mix-models transport run'. Each label triggers 1 job in the target-repo/
  # target-workflow.
  #
  # - Delete lines to disable some runs.
  # - Ensure there is NO trailing comma on the last line.
  labels: >-
    [
      "SSP2",
      "EDITS-CA"
    ]

  # Currently disabled:
  # [
  #
  # ]

on:
  # Uncomment these lines for debugging, but leave them commented on 'main'
  pull_request:
    branches: [ main ]
  # push:
  #   branches: [ main ]
  schedule:
  - cron: "0 1 * * *"  # 01:00 UTC = 02:00 CET = 03:00 CEST
  workflow_dispatch: {}

# Cancel previous runs that have not completed
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  dispatch:
    runs-on: ubuntu-latest

    steps:
    - name: Assemble JSON payload
      run: |
        echo '{
          "ref": "${{ github.ref }}",
          "sha": "${{ github.sha }}",
          "base": "${{ env.base }}",
          "from-step": "${{ env.from-step }}",
          "labels": ${{ env.labels }}
        }' | jq -r -c '.labels = (.labels | tostring)' | tee payload.json

    - name: Invoke "${{ env.target-workflow }}" workflow in ${{ env.target-repo }}
      env:
        GH_TOKEN: ${{ secrets.MESSAGE_DATA_DISPATCH_TOKEN }}
      run: |
        cat payload.json | gh workflow run --json \
          ${{ env.target-workflow }}.yaml \
          --repo=${{ env.target-repo }} \
          --ref=${{ env.target-ref }}

        sleep 5

        gh run list \
          --workflow=${{ env.target-workflow.yaml }} --repo=${{ env.target-repo }} \
          --json url,status \
          --jq 'map(select(.status != "completed"))[0].url' >>$GITHUB_STEP_SUMMARY
